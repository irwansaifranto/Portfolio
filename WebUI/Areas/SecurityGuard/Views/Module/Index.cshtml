@model SecurityGuard.ViewModels.ManageModulesViewModel
@{
    ViewBag.Title = "Index";
    //Layout = "~/Areas/SecurityGuard/Views/Shared/_SecurityGuardLayoutPage.cshtml";
}

<div id="breadcrumb">
    @Html.ActionLink("Dashboard", "Index", "Dashboard") > Manage Actions
</div>

<div class="page-header">
	<h1>Manage Modules</h1>
</div>

<ul class="system_messages" style="display: none;">
</ul>

<div class="form-horizontal">
    <div class="form-group">
        <label class="col-xs-2 control-label">Module Name</label>
		<div class="col-xs-4">
            @Html.TextBox("ModuleName", "", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-xs-2 control-label">Parent Module</label>
		<div class="col-xs-4">
            @Html.DropDownList("ParentModule", Model.Modules, "[None]", new { @class = "form-control" })
            @*<input id="testing_parent" style="width: 400px;"/>*@
        </div>
    </div>
    
	<div class="form-group">
		<div class="col-xs-offset-2 col-xs-10">
            <button id="add-module" class="btn btn-default">Add</button>&nbsp;
		</div>
	</div>
    
    <hr />
        
    <h2>Modules</h2>
    <p>To Add an action to Module, select module then click the &quot;Add Action&quot; button.</p>
    <div class="form-group">
        <label class="col-xs-2 control-label">Module</label>
        <div class="col-xs-10">
            <div id="treeview" class="demo-section"></div>
        </div>
    </div>
    
    <div class="form-group">
		<div class="col-xs-offset-2 col-xs-5">
			<div class="checkbox">
                @Html.CheckBox("throwOnPopulatedModule")&nbsp;Delete module in roles? <em class="small">(Recommended: un-checked)</em>
            </div>
        </div>
    </div>
    
	<div class="form-group">
		<div class="col-xs-offset-2 col-xs-10">
            <button id="delete-modules" class="btn btn-default">Delete</button>&nbsp;
            @Html.ActionLink("Add Action", "AddAction", "Module", new { area = "SecurityGuard" }, new { id = "add-action"})
		</div>
	</div>
</div><br>
<div class="form-horizontal">
    <div class="form-group">
        <label class="col-xs-2 control-label">Get Actions In Role</label>
        <div class="col-xs-4">
            @Html.DropDownList("ModuleList", Model.Modules, "[Select Module]", new { @class = "form-control" })
        </div>
    </div>
    <div id="modules-in-action-div" class="form-group" style="display: none;">
        <div class="col-xs-offset-2 col-xs-4">
            Modules In Action
            <ul>
            </ul>
        </div>
    </div>
</div>
@section sgscripts{
<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.jqia.selects.js")" type="text/javascript"></script>
<script type="text/javascript">

    //var serviceRoot = "http://demos.telerik.com/kendo-ui/service";
    homogeneous = new kendo.data.HierarchicalDataSource({
        transport: {
            read: {
                url: '@Url.Action("GetModuleBinding","Module", new {area = "SecurityGuard"})',
                dataType: "json"
            }
        },
        schema: {
            model: {
                id: "ModuleName",
                hasChildren: "HasChildren"
            }
        }
    });

    $("#treeview").kendoTreeView({
        dataSource: homogeneous,
        dataTextField: "ModuleName",
        select: onSelect,
    });

    function onSelect(e) {
        var anchor = $("a#add-action");

        // Get a reference to the "href" of the link.
        //var href = anchor.attr("href");
        var href = '@Url.Action("AddAction", "Module", new {area = "SecurityGuard"})';

        // Concatenate the existing href value with the username
        var newHref = href + "/?moduleName=" + encodeURIComponent(this.text(e.node));

        // Replace the existing href value with the new one
        anchor.attr("href", newHref);
    }

    $("#testing_parent").kendoDropDownList({
        dataTextField: "ModuleName",
        dataValueField: "ModuleName",
        valueTemplate: '#:data.ModuleName#',
        template: '<span class="k-state-default"><p>#: data.Space ##: data.ModuleName #</p></span>',
        dataSource: {
            transport: {
                read: {
                    dataType: "json",
                    url: '@Url.Action("GetListModule","Module")',
                }
            }
        }
    });

    $(function () {

        var message = $(".system_messages");

        /***********************************************
        * Begin Add Module Functions
        ***********************************************/
        $("#add-module").click(function () {
            var moduleName = $("#ModuleName").val();
            var parentModule = $("#ParentModule option:selected").text();

            if (moduleName == "") {
                ShowMessage("Please enter a module name.");
                return;
            }
            if (parentModule == '[None]') {
                parentModule = '';
            }

            $.ajax({
                url: '@Url.Action("CreateModule", "Module")',
                dataType: 'json',
                type: 'POST',
                cache: false,
                data: { moduleName: moduleName, parentModule: parentModule },
                success: OnCreateModuleSuccess,
                error: OnCreateModuleError
            });
        });

        function OnCreateModuleSuccess(data) {
            $("li", message).remove();
            if (data.Success) {
                $("#ModuleName").val("");

                //refresh tree and drodown
                var tree = $("#treeview").data("kendoTreeView");
                tree.dataSource.read();
                GetAllModule("ParentModule");
                GetAllModule("ModuleList");
            } else {
                $("#ModuleName").val("");
            }

            DisplayMessage(data);
            message.show().delay(5000).fadeOut();
        }

        function OnCreateModuleError(xhr, status, error) {
            message.show().delay(5000).fadeOut();    // Show the message
            $("li", message).addClass("red");      // Apply the Green style
            $("strong", message).text(error); // Insert the message
        }

        $("#ModuleName").keyup(function () {
            var text = $(this).val();
            if (text != "") {
                $("strong", message).text("");
            }
        });


        /***********************************************
        * End Add Module Functions
        ***********************************************/

        /***********************************************
        * Begin Delete Action Functions
        ***********************************************/

        $("#delete-modules").click(function () {
            var modulesList = $("#treeview").data("kendoTreeView"),
                selected = modulesList.select(),
                item = modulesList.dataItem(selected);
            //console.log(item.ModuleName);
            if (item == null) {
                ShowMessage("Please select at least one action to delete.");
                return;
            }

            if (!confirm("Are you sure you want to delete these Module?  This cannot be undone!")) {
                return;
            }

            var chkBox = $("#throwOnPopulatedModule");
            var throwOnPopModule = !chkBox.is(":checked");

            $.ajax({
                url: '@Url.Action("DeleteModules", "Module")',
                dataType: 'json',
                type: 'POST',
                cache: false,
                data: { moduleName: item.ModuleName, throwOnPopulatedModule: throwOnPopModule },
                success: OnDeleteModuleSuccess,
                error: OnDeletModuleError
            });
        });

        function OnDeleteModuleSuccess(data) {
            if (data.Success) {
                $("li", message).remove();  // remove all li from the system_messages ul element.
                $.each(data.Messages, function (index, item) {
                    if (item.Success) {
                        // Refresh tree dropdown
                        var tree = $("#treeview").data("kendoTreeView");
                        tree.dataSource.read();
                        GetAllModule("ParentModule");   
                        GetAllModule("ModuleList");
                    }

                    // Show the message
                    DisplayMessage(item);
                });
                message.show().delay(5000).fadeOut();
            }
        }

        function OnDeletModuleError(xhr, status, error) {
            DisplayError(error);
            message.show().delay(5000).fadeOut();
        }

        /***********************************************
        * End Delete Action Functions
        ***********************************************/

        /***********************************************
        * Begin Get Actions In Module Functions
        ***********************************************/

        //modules-in-action-div

        var modulesInActionDiv = $("#modules-in-action-div");
        var ul = $("#modules-in-action-div ul");

        $("#ModuleList").change(function () {
            var item = $(this).val();

            if (item != "") {
                modulesInActionDiv.show();

                $.ajax({
                    url: '@Url.Action("GetActionsInModule", "Module")',
                    dataType: 'json',
                    type: 'GET',
                    cache: false,
                    data: { moduleName: item },
                    success: OnGetActionsInModuleSuccess,
                    error: OnGetActionsInModuleError
                });
            } else {
                $("#modules-in-action-div").hide();
            }
        });

        function OnGetActionsInModuleSuccess(data) {
            ul.empty();
            if (data == "") {
                ul.append("<li>No Action(s).</li>");
            } else {
                $.each(data, function (index, item) {
                    ul.append("<li><a href=\"/SecurityGuard/Action\" >" + item.ActionName + "</a></li>");
                });
            }
        }

        function OnGetActionsInModuleError(xhr, status, error) {
            message.show().delay(5000).fadeOut();    // Show the message
            $("li", message).addClass("red");      // Apply the Green style
            $("strong", message).text(error); // Insert the message
        }

        /***********************************************
        * End Get Users In Role Functions
        ***********************************************/


        /***********************************************
        * Begin Common Role Functions
        ***********************************************/

        function GetAllModule(selectObject) {
            $.ajax({
                url: '@Url.Action("GetAllModule", "Module")',
                dataType: 'json',
                type: 'GET',
                cache: false,
                success: function (data) {
                    console.log(data);
                    var actionList = $("#" + selectObject);
                    actionList.loadSelect(data);
                }
            });
        }


        //<ul class="system_messages" style="display: none;">
        //    <li><span class="ico"></span><strong class="system_title"></strong></li>
        //</ul>

        function DisplayError(error) {
            var li = $("<li></li>").addClass("red");
            var span = $("<span></span>").addClass("ico").appendTo(li);
            var strong = $("<strong></strong>").addClass("system_title").html(error).appendTo(li);

            li.appendTo(message);
        }

        function DisplayMessage(data) {
            var li = $("<li></li>").addClass(data.CssClass);
            var span = $("<span></span>").addClass("ico").appendTo(li);
            var strong = $("<strong></strong>").addClass("system_title").html(data.Message).appendTo(li);

            li.appendTo(message);
        }

        function ShowMessage(msg) {
            $("li", message).remove();
            var li = $("<li></li>").addClass("yellow");
            var span = $("<span></span>").addClass("ico").appendTo(li);
            var strong = $("<strong></strong>").addClass("system_title").html(msg).appendTo(li);

            li.appendTo(message);
            message.show().delay(5000).fadeOut();
        }

        /***********************************************
        * End Common Role Functions
        ***********************************************/


    });

</script>
}
